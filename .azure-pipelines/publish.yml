pr: none

trigger:
  tags:
    include:
    - '*'

variables:
  # Required for Microbuild
  - name: TeamName
    value: Playwright

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

# VSCode extension signing: https://aka.ms/vsm-ms-publisher-sign
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    pool:
      # https://aka.ms/MicroBuild
      name: VSEngSS-MicroBuild2022-1ES
      os: windows
    stages:
    - stage: Stage
      jobs:
      - job: HostJob
        templateContext:
          mb:
            signing:
              enabled: true
              signType: real
              signWithProd: true
        steps:
        - task: UseNode@1
          inputs:
            version: '20.x'
          displayName: 'Install Node.js'
        - script: npm ci
          displayName: 'Install dependencies'
        - task: PowerShell@2
          displayName: 'Package the extension'
          inputs:
            targetType: 'inline'
            script: |
              if ("$(Build.Reason)" -eq "Manual") {
                npm run package -- --out extension.vsix --pre-release
              } else {
                npm run package -- --out extension.vsix
              }
        - script: npx vsce generate-manifest -i extension.vsix -o extension.manifest
          displayName: 'Generate the manifest'
        - task: DotNetCoreCLI@2
          displayName: Sign
          inputs:
            command: 'build'
            projects: 'PlaywrightVSCode.signproj'
        - task: AzureCLI@2
          displayName: 'Publishing with Managed Identity'  
          inputs:
            azureSubscription: 'Playwright-VSMarketplacePublishing'
            scriptType: "pscore"
            scriptLocation: 'inlineScript'
            inlineScript: |
              $aadToken = az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv
              npx vsce verify-pat --pat $aadToken ms-playwright
              if ("$(Build.Reason)" -eq "Manual") {
                npx vsce publish --pre-release --pat $aadToken --packagePath extension.vsix --manifestPath extension.manifest --signaturePath extension.signature.p7s
              } else {
                npx vsce publish --pat $aadToken --packagePath extension.vsix --manifestPath extension.manifest --signaturePath extension.signature.p7s
              }
